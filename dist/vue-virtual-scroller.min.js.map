{"version":3,"file":"vue-virtual-scroller.min.js","sources":["../src/config.js","../node_modules/vue-resize/dist/vue-resize.esm.js","../node_modules/vue-observe-visibility/dist/vue-observe-visibility.esm.js","../node_modules/scrollparent/scrollparent.js","../src/components/common.js","../src/utils.js","../src/components/RecycleScroller.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/DynamicScroller.vue","../src/components/DynamicScrollerItem.vue","../src/index.js","../src/mixins/IdState.js"],"sourcesContent":["export default {\n  itemsLimit: 1000,\n}\n","function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function (node, ps) {\n    if (node.parentNode === null) { return ps; }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function (node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function (node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function (node) {\n   return regex.test(overflow(node));\n  };\n\n  var scrollParent = function (node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return ;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n}));\n","export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    class=\"vue-recycle-scroller ready direction-vertical\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <div\n      ref=\"wrapper\"\n      :style=\"{ minHeight: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n    >\n      <div\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"ready ? { transform: `translateY(${view.position}px)` } : null\"\n        class=\"vue-recycle-scroller__item-view\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </div>\n    </div>\n\n    <div\n      v-if=\"$slots.after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n\n      if (!count) {\n        startIndex = endIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = 0\n        endIndex = this.prerender\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize)\n          endIndex = Math.ceil(scroll.end / itemSize)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n\n          totalSize = count * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.findIndex(\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item,\n              )\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n        } else {\n          view.position = i * itemSize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el } = this\n\n      const scrollTop = el.scrollTop\n      return {\n        start: scrollTop,\n        end: scrollTop + el.clientHeight,\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive ? {\n        passive: true,\n      } : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = index * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      this.$el.scrollTop = position\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    key-field=\"id\"\n    :emit-update=\"emitUpdate\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    @update=\"onUpdate\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  inheritAttrs: false,\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target) {\n            const event = new CustomEvent(\n              'resize',\n              {\n                detail: {\n                  contentRect: entry.contentRect,\n                },\n              },\n            )\n            entry.target.dispatchEvent(event)\n          }\n        }\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n    typeField: {\n      type: [String],\n      default: 'type',\n    },\n    emitUpdate: {\n      type: [Boolean],\n      default: false,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      const length = items.length\n      for (let i = 0; i < length; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n          type: item[this.typeField],\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n  },\n\n  created () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    onUpdate (...args) {\n      this.$emit('update', ...args)\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n</script>\n","<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      return this.vscrollData.simpleArray ? this.index : this.item[this.vscrollData.keyField]\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData) {\n        this.$_watchData = this.$watch('item', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = Math.round(height)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n","import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n","import Vue from 'vue'\n\nexport default function ({\n  idProp = vm => vm.item.id,\n} = {}) {\n  const store = {}\n  const vm = new Vue({\n    data () {\n      return {\n        store,\n      }\n    },\n  })\n\n  // @vue/component\n  return {\n    data () {\n      return {\n        idState: null,\n      }\n    },\n\n    created () {\n      this.$_id = null\n      if (typeof idProp === 'function') {\n        this.$_getId = () => idProp.call(this, this)\n      } else {\n        this.$_getId = () => this[idProp]\n      }\n      this.$watch(this.$_getId, {\n        handler (value) {\n          this.$nextTick(() => {\n            this.$_id = value\n          })\n        },\n        immediate: true,\n      })\n      this.$_updateIdState()\n    },\n\n    beforeUpdate () {\n      this.$_updateIdState()\n    },\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit (id) {\n        const factory = this.$options.idState\n        if (typeof factory === 'function') {\n          const data = factory.call(this, this)\n          vm.$set(store, id, data)\n          this.$_id = id\n          return data\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\n        }\n      },\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState () {\n        const id = this.$_getId()\n        if (id == null) {\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id)\n          }\n          this.idState = store[id]\n        }\n      },\n    },\n  }\n}\n"],"names":["config","itemsLimit","isIE","initCompat","init","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","getInternetExplorerVersion","ResizeObserver","render","_h","this","$createElement","_self","_c","staticClass","attrs","tabindex","staticRenderFns","_scopeId","name","methods","compareAndNotify","_w","$el","offsetWidth","offsetHeight","$emit","addResizeHandlers","_resizeObject","contentDocument","defaultView","addEventListener","removeResizeHandlers","onload","removeEventListener","mounted","_this","$nextTick","object","document","createElement","setAttribute","type","appendChild","data","beforeDestroy","plugin","version","install","Vue","component","GlobalVue","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","global","use","VisibilityState","el","options","vnode","instance","Constructor","_classCallCheck","observer","frozen","createObserver","protoProps","staticProps","value","destroyObserver","callback","result","entry","once","throttle","_leading","throttleOptions","leading","delay","timeout","lastState","currentArgs","arguments","undefined","throttled","state","_len","args","_key","apply","concat","clearTimeout","setTimeout","_clear","oldResult","IntersectionObserver","entries","intersectingEntry","find","e","isIntersecting","intersectionRatio","threshold","intersection","context","observe","disconnect","get","bind","_ref2","console","warn","_vue_visibilityState","unbind","ObserveVisibility","update","_ref3","deepEqual","val1","val2","oldValue","directive","root","factory","regex","parents","node","ps","parentNode","style","prop","getComputedStyle","getPropertyValue","scroll","test","overflow","HTMLElement","SVGElement","scrollingElement","documentElement","module","exports","Scrollparent","items","required","keyField","String","default","simpleArray","supportsPassive","opts","uid","normalizeComponent","template","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","_compiled","functional","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","__vue_script__","components","directives","itemSize","Number","minItemSize","sizeField","typeField","buffer","prerender","emitUpdate","Boolean","pool","totalSize","ready","computed","sizes","current","-1","accumulator","field","computedMinSize","l","size","$_computedMinItemSize","watch","updateVisibleItems","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","removeListeners","addView","index","item","view","position","nonReactive","id","used","push","unuseView","fake","unusedViews","nr","unusedPool","set","delete","handleResize","handleScroll","event","_this2","requestAnimationFrame","continuous","$_refreshTimout","handleVisibilityChange","isVisible","_this3","boundingClientRect","width","height","checkItem","startIndex","endIndex","checkPositionDiff","count","views","getScroll","positionDiff","start","end","oldI","a","b","Math","ceil","itemsLimitError","$_continuous","clear","findIndex","v","unusedIndex","Error","pop","$_sortTimer","sortViews","getListenerTarget","ScrollParent","body","scrollTop","clientHeight","addListeners","listenerTarget","passive","scrollToItem","scrollToPosition","_this4","log","sort","viewA","viewB","RecycleScroller","inheritAttrs","provide","$_resizeObserver","_step","_iterator","_createForOfIteratorHelper","s","n","done","CustomEvent","detail","contentRect","dispatchEvent","err","f","vscrollData","vscrollParent","vscrollResizeObserver","active","validSizes","itemsWithSize","$_undefinedMap","listeners","$listeners","forceUpdate","immediate","$_updates","$_undefinedSizes","activated","deactivated","onScrollerResize","$refs","scroller","onScrollerVisible","force","onUpdate","getItemSize","scrollToBottom","$_scrollingToBottom","scrollHeight","cb","inject","watchData","sizeDependencies","emitResize","tag","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","_loop","k","$watch","$on","onVscrollUpdate","onVscrollUpdateSize","$off","$_pendingSizeUpdate","computeSize","$_watchData","_ref","applySize","round","$set","onResize","unobserve","_event$detail$content","$slots","VERSION","finalOptions","assign","installComponents","componentsPrefix","prefix","DynamicScroller","DynamicScrollerItem","registerComponents","_ref$idProp","idProp","vm","store","idState","$_id","$_getId","$_updateIdState","beforeUpdate","$_idStateInit"],"mappings":"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"}